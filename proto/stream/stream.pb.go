// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream/stream.proto

package ProtobufStream

import (
	markets "code.cryptowat.ch/cw-sdk-go/proto/markets"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthenticationResult_Status int32

const (
	AuthenticationResult_UNKNOWN       AuthenticationResult_Status = 0
	AuthenticationResult_AUTHENTICATED AuthenticationResult_Status = 1
	AuthenticationResult_BAD_NONCE     AuthenticationResult_Status = 2
	AuthenticationResult_BAD_TOKEN     AuthenticationResult_Status = 3
	AuthenticationResult_TOKEN_EXPIRED AuthenticationResult_Status = 4
)

var AuthenticationResult_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "AUTHENTICATED",
	2: "BAD_NONCE",
	3: "BAD_TOKEN",
	4: "TOKEN_EXPIRED",
}

var AuthenticationResult_Status_value = map[string]int32{
	"UNKNOWN":       0,
	"AUTHENTICATED": 1,
	"BAD_NONCE":     2,
	"BAD_TOKEN":     3,
	"TOKEN_EXPIRED": 4,
}

func (x AuthenticationResult_Status) String() string {
	return proto.EnumName(AuthenticationResult_Status_name, int32(x))
}

func (AuthenticationResult_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{1, 0}
}

type StreamMessage struct {
	// Types that are valid to be assigned to Body:
	//	*StreamMessage_AuthenticationResult
	//	*StreamMessage_SubscriptionResult
	//	*StreamMessage_UnsubscriptionResult
	//	*StreamMessage_MarketUpdate
	//	*StreamMessage_PairUpdate
	//	*StreamMessage_AssetUpdate
	Body                 isStreamMessage_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StreamMessage) Reset()         { *m = StreamMessage{} }
func (m *StreamMessage) String() string { return proto.CompactTextString(m) }
func (*StreamMessage) ProtoMessage()    {}
func (*StreamMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{0}
}

func (m *StreamMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamMessage.Unmarshal(m, b)
}
func (m *StreamMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamMessage.Marshal(b, m, deterministic)
}
func (m *StreamMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamMessage.Merge(m, src)
}
func (m *StreamMessage) XXX_Size() int {
	return xxx_messageInfo_StreamMessage.Size(m)
}
func (m *StreamMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamMessage proto.InternalMessageInfo

type isStreamMessage_Body interface {
	isStreamMessage_Body()
}

type StreamMessage_AuthenticationResult struct {
	AuthenticationResult *AuthenticationResult `protobuf:"bytes,1,opt,name=authenticationResult,proto3,oneof"`
}

type StreamMessage_SubscriptionResult struct {
	SubscriptionResult *SubscriptionResult `protobuf:"bytes,5,opt,name=subscriptionResult,proto3,oneof"`
}

type StreamMessage_UnsubscriptionResult struct {
	UnsubscriptionResult *UnsubscriptionResult `protobuf:"bytes,6,opt,name=unsubscriptionResult,proto3,oneof"`
}

type StreamMessage_MarketUpdate struct {
	MarketUpdate *markets.MarketUpdateMessage `protobuf:"bytes,2,opt,name=marketUpdate,proto3,oneof"`
}

type StreamMessage_PairUpdate struct {
	PairUpdate *markets.PairUpdateMessage `protobuf:"bytes,3,opt,name=pairUpdate,proto3,oneof"`
}

type StreamMessage_AssetUpdate struct {
	AssetUpdate *markets.AssetUpdateMessage `protobuf:"bytes,4,opt,name=assetUpdate,proto3,oneof"`
}

func (*StreamMessage_AuthenticationResult) isStreamMessage_Body() {}

func (*StreamMessage_SubscriptionResult) isStreamMessage_Body() {}

func (*StreamMessage_UnsubscriptionResult) isStreamMessage_Body() {}

func (*StreamMessage_MarketUpdate) isStreamMessage_Body() {}

func (*StreamMessage_PairUpdate) isStreamMessage_Body() {}

func (*StreamMessage_AssetUpdate) isStreamMessage_Body() {}

func (m *StreamMessage) GetBody() isStreamMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *StreamMessage) GetAuthenticationResult() *AuthenticationResult {
	if x, ok := m.GetBody().(*StreamMessage_AuthenticationResult); ok {
		return x.AuthenticationResult
	}
	return nil
}

func (m *StreamMessage) GetSubscriptionResult() *SubscriptionResult {
	if x, ok := m.GetBody().(*StreamMessage_SubscriptionResult); ok {
		return x.SubscriptionResult
	}
	return nil
}

func (m *StreamMessage) GetUnsubscriptionResult() *UnsubscriptionResult {
	if x, ok := m.GetBody().(*StreamMessage_UnsubscriptionResult); ok {
		return x.UnsubscriptionResult
	}
	return nil
}

func (m *StreamMessage) GetMarketUpdate() *markets.MarketUpdateMessage {
	if x, ok := m.GetBody().(*StreamMessage_MarketUpdate); ok {
		return x.MarketUpdate
	}
	return nil
}

func (m *StreamMessage) GetPairUpdate() *markets.PairUpdateMessage {
	if x, ok := m.GetBody().(*StreamMessage_PairUpdate); ok {
		return x.PairUpdate
	}
	return nil
}

func (m *StreamMessage) GetAssetUpdate() *markets.AssetUpdateMessage {
	if x, ok := m.GetBody().(*StreamMessage_AssetUpdate); ok {
		return x.AssetUpdate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamMessage_OneofMarshaler, _StreamMessage_OneofUnmarshaler, _StreamMessage_OneofSizer, []interface{}{
		(*StreamMessage_AuthenticationResult)(nil),
		(*StreamMessage_SubscriptionResult)(nil),
		(*StreamMessage_UnsubscriptionResult)(nil),
		(*StreamMessage_MarketUpdate)(nil),
		(*StreamMessage_PairUpdate)(nil),
		(*StreamMessage_AssetUpdate)(nil),
	}
}

func _StreamMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamMessage)
	// body
	switch x := m.Body.(type) {
	case *StreamMessage_AuthenticationResult:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuthenticationResult); err != nil {
			return err
		}
	case *StreamMessage_SubscriptionResult:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionResult); err != nil {
			return err
		}
	case *StreamMessage_UnsubscriptionResult:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsubscriptionResult); err != nil {
			return err
		}
	case *StreamMessage_MarketUpdate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MarketUpdate); err != nil {
			return err
		}
	case *StreamMessage_PairUpdate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PairUpdate); err != nil {
			return err
		}
	case *StreamMessage_AssetUpdate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssetUpdate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StreamMessage.Body has unexpected type %T", x)
	}
	return nil
}

func _StreamMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamMessage)
	switch tag {
	case 1: // body.authenticationResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuthenticationResult)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_AuthenticationResult{msg}
		return true, err
	case 5: // body.subscriptionResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubscriptionResult)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_SubscriptionResult{msg}
		return true, err
	case 6: // body.unsubscriptionResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsubscriptionResult)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_UnsubscriptionResult{msg}
		return true, err
	case 2: // body.marketUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(markets.MarketUpdateMessage)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_MarketUpdate{msg}
		return true, err
	case 3: // body.pairUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(markets.PairUpdateMessage)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_PairUpdate{msg}
		return true, err
	case 4: // body.assetUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(markets.AssetUpdateMessage)
		err := b.DecodeMessage(msg)
		m.Body = &StreamMessage_AssetUpdate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StreamMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamMessage)
	// body
	switch x := m.Body.(type) {
	case *StreamMessage_AuthenticationResult:
		s := proto.Size(x.AuthenticationResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamMessage_SubscriptionResult:
		s := proto.Size(x.SubscriptionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamMessage_UnsubscriptionResult:
		s := proto.Size(x.UnsubscriptionResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamMessage_MarketUpdate:
		s := proto.Size(x.MarketUpdate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamMessage_PairUpdate:
		s := proto.Size(x.PairUpdate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamMessage_AssetUpdate:
		s := proto.Size(x.AssetUpdate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AuthenticationResult struct {
	Status               AuthenticationResult_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ProtobufStream.AuthenticationResult_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AuthenticationResult) Reset()         { *m = AuthenticationResult{} }
func (m *AuthenticationResult) String() string { return proto.CompactTextString(m) }
func (*AuthenticationResult) ProtoMessage()    {}
func (*AuthenticationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{1}
}

func (m *AuthenticationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationResult.Unmarshal(m, b)
}
func (m *AuthenticationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationResult.Marshal(b, m, deterministic)
}
func (m *AuthenticationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationResult.Merge(m, src)
}
func (m *AuthenticationResult) XXX_Size() int {
	return xxx_messageInfo_AuthenticationResult.Size(m)
}
func (m *AuthenticationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationResult.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationResult proto.InternalMessageInfo

func (m *AuthenticationResult) GetStatus() AuthenticationResult_Status {
	if m != nil {
		return m.Status
	}
	return AuthenticationResult_UNKNOWN
}

// SubscriptionResult is sent to clients after subscription to some key(s) is
// attempted. It happens after successful authentication (if authentication
// message contained initial subscriptions) as well as after
// ClientSubscribeMessage.
type SubscriptionResult struct {
	// Successful subscriptions
	Subscribed []string `protobuf:"bytes,1,rep,name=subscribed,proto3" json:"subscribed,omitempty"`
	// Faied subscriptions
	Failed []*SubscribeError `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	// Current status: list of the keys to which the client is now subscribed
	Status               *SubscriptionStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscriptionResult) Reset()         { *m = SubscriptionResult{} }
func (m *SubscriptionResult) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResult) ProtoMessage()    {}
func (*SubscriptionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{2}
}

func (m *SubscriptionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResult.Unmarshal(m, b)
}
func (m *SubscriptionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResult.Marshal(b, m, deterministic)
}
func (m *SubscriptionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResult.Merge(m, src)
}
func (m *SubscriptionResult) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResult.Size(m)
}
func (m *SubscriptionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResult proto.InternalMessageInfo

func (m *SubscriptionResult) GetSubscribed() []string {
	if m != nil {
		return m.Subscribed
	}
	return nil
}

func (m *SubscriptionResult) GetFailed() []*SubscribeError {
	if m != nil {
		return m.Failed
	}
	return nil
}

func (m *SubscriptionResult) GetStatus() *SubscriptionStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// UnsubscriptionResult is sent to clients in response to
// ClientUnsubscribeMessage.
type UnsubscriptionResult struct {
	// Successful unsubscriptions
	Unsubscribed []string `protobuf:"bytes,1,rep,name=unsubscribed,proto3" json:"unsubscribed,omitempty"`
	// Faied unsubscriptions
	Failed []*UnsubscribeError `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	// Current status: list of the keys to which the client is now subscribed
	Status               *SubscriptionStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UnsubscriptionResult) Reset()         { *m = UnsubscriptionResult{} }
func (m *UnsubscriptionResult) String() string { return proto.CompactTextString(m) }
func (*UnsubscriptionResult) ProtoMessage()    {}
func (*UnsubscriptionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{3}
}

func (m *UnsubscriptionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscriptionResult.Unmarshal(m, b)
}
func (m *UnsubscriptionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscriptionResult.Marshal(b, m, deterministic)
}
func (m *UnsubscriptionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscriptionResult.Merge(m, src)
}
func (m *UnsubscriptionResult) XXX_Size() int {
	return xxx_messageInfo_UnsubscriptionResult.Size(m)
}
func (m *UnsubscriptionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscriptionResult.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscriptionResult proto.InternalMessageInfo

func (m *UnsubscriptionResult) GetUnsubscribed() []string {
	if m != nil {
		return m.Unsubscribed
	}
	return nil
}

func (m *UnsubscriptionResult) GetFailed() []*UnsubscribeError {
	if m != nil {
		return m.Failed
	}
	return nil
}

func (m *UnsubscriptionResult) GetStatus() *SubscriptionStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// SubscribeError represents an error of a single key: it contains the key and
// the error message explaining why subscription has failed. Sent as part of
// SubscriptionResult.
type SubscribeError struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeError) Reset()         { *m = SubscribeError{} }
func (m *SubscribeError) String() string { return proto.CompactTextString(m) }
func (*SubscribeError) ProtoMessage()    {}
func (*SubscribeError) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{4}
}

func (m *SubscribeError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeError.Unmarshal(m, b)
}
func (m *SubscribeError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeError.Marshal(b, m, deterministic)
}
func (m *SubscribeError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeError.Merge(m, src)
}
func (m *SubscribeError) XXX_Size() int {
	return xxx_messageInfo_SubscribeError.Size(m)
}
func (m *SubscribeError) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeError.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeError proto.InternalMessageInfo

func (m *SubscribeError) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SubscribeError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// UnsubscribeError represents an error of a single key: it contains the key
// and the error message explaining why unsubscription has failed. Sent as part
// of UnsubscriptionResult.
type UnsubscribeError struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeError) Reset()         { *m = UnsubscribeError{} }
func (m *UnsubscribeError) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeError) ProtoMessage()    {}
func (*UnsubscribeError) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{5}
}

func (m *UnsubscribeError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeError.Unmarshal(m, b)
}
func (m *UnsubscribeError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeError.Marshal(b, m, deterministic)
}
func (m *UnsubscribeError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeError.Merge(m, src)
}
func (m *UnsubscribeError) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeError.Size(m)
}
func (m *UnsubscribeError) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeError.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeError proto.InternalMessageInfo

func (m *UnsubscribeError) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UnsubscribeError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// SubscriptionStatus contains the key to which the client is subscribed right
// now. Sent as part of SubscriptionResult and UnsubscriptionResult.
type SubscriptionStatus struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionStatus) Reset()         { *m = SubscriptionStatus{} }
func (m *SubscriptionStatus) String() string { return proto.CompactTextString(m) }
func (*SubscriptionStatus) ProtoMessage()    {}
func (*SubscriptionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_39c39af072f39be4, []int{6}
}

func (m *SubscriptionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionStatus.Unmarshal(m, b)
}
func (m *SubscriptionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionStatus.Marshal(b, m, deterministic)
}
func (m *SubscriptionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionStatus.Merge(m, src)
}
func (m *SubscriptionStatus) XXX_Size() int {
	return xxx_messageInfo_SubscriptionStatus.Size(m)
}
func (m *SubscriptionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionStatus proto.InternalMessageInfo

func (m *SubscriptionStatus) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterEnum("ProtobufStream.AuthenticationResult_Status", AuthenticationResult_Status_name, AuthenticationResult_Status_value)
	proto.RegisterType((*StreamMessage)(nil), "ProtobufStream.StreamMessage")
	proto.RegisterType((*AuthenticationResult)(nil), "ProtobufStream.AuthenticationResult")
	proto.RegisterType((*SubscriptionResult)(nil), "ProtobufStream.SubscriptionResult")
	proto.RegisterType((*UnsubscriptionResult)(nil), "ProtobufStream.UnsubscriptionResult")
	proto.RegisterType((*SubscribeError)(nil), "ProtobufStream.SubscribeError")
	proto.RegisterType((*UnsubscribeError)(nil), "ProtobufStream.UnsubscribeError")
	proto.RegisterType((*SubscriptionStatus)(nil), "ProtobufStream.SubscriptionStatus")
}

func init() { proto.RegisterFile("stream/stream.proto", fileDescriptor_39c39af072f39be4) }

var fileDescriptor_39c39af072f39be4 = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x71, 0x4c, 0x5c, 0x31, 0x04, 0xe4, 0x4e, 0x38, 0xa0, 0x1c, 0x22, 0xe4, 0xf6, 0x80,
	0x54, 0xc9, 0x91, 0xa8, 0x54, 0x45, 0xb9, 0x39, 0x60, 0x95, 0x34, 0xc2, 0xa0, 0xc5, 0xa8, 0x7f,
	0x2e, 0xd1, 0x3a, 0x6c, 0x5a, 0x8b, 0x04, 0x23, 0xef, 0xfa, 0xc0, 0xad, 0x1f, 0xa7, 0xc7, 0x9e,
	0xfa, 0xf9, 0x2a, 0xaf, 0x6d, 0xb0, 0x8d, 0xa3, 0xe6, 0xd0, 0xd3, 0xae, 0x87, 0xf7, 0x7e, 0x0c,
	0x33, 0x0f, 0xc3, 0x29, 0x17, 0x21, 0xa3, 0x4f, 0x17, 0xc9, 0x61, 0x6e, 0xc2, 0x40, 0x04, 0xd8,
	0x9e, 0xc5, 0x87, 0x17, 0x3d, 0xcc, 0x65, 0xf5, 0xac, 0xf3, 0x44, 0xc3, 0x15, 0x13, 0xfc, 0x22,
	0x39, 0x13, 0xd5, 0x19, 0x66, 0xd5, 0x0d, 0xf5, 0xc3, 0xb4, 0x76, 0x9a, 0xd5, 0x28, 0xe7, 0x99,
	0xd0, 0xf8, 0x59, 0x87, 0x56, 0x42, 0x9a, 0x30, 0xce, 0xe9, 0x77, 0x86, 0xdf, 0xa0, 0x43, 0x23,
	0xf1, 0x83, 0xad, 0x85, 0x7f, 0x4f, 0x85, 0x1f, 0xac, 0x09, 0xe3, 0xd1, 0xa3, 0xe8, 0x2a, 0x3d,
	0xa5, 0xdf, 0x1c, 0xbc, 0x35, 0x8b, 0xdf, 0x6f, 0x5a, 0x15, 0xda, 0x71, 0x8d, 0x54, 0x32, 0xd0,
	0x05, 0xe4, 0x91, 0xc7, 0xef, 0x43, 0x7f, 0x93, 0x23, 0x1f, 0x4b, 0xb2, 0x51, 0x26, 0xcf, 0x0f,
	0x94, 0xe3, 0x1a, 0xa9, 0xf0, 0xc7, 0x1d, 0x47, 0xeb, 0x0a, 0xae, 0x56, 0xdd, 0xf1, 0xa2, 0x42,
	0x1b, 0x77, 0x5c, 0xc5, 0xc0, 0x4f, 0x70, 0x92, 0x8c, 0x6d, 0xb1, 0x59, 0x52, 0xc1, 0xba, 0x47,
	0x25, 0xe6, 0x24, 0x99, 0xa9, 0x39, 0xc9, 0x89, 0xd2, 0x49, 0x8e, 0x6b, 0xa4, 0xe0, 0xc5, 0x11,
	0x40, 0xbc, 0x8e, 0x94, 0xa4, 0x96, 0x7e, 0x75, 0x46, 0x9a, 0xed, 0x24, 0x7b, 0x4e, 0xce, 0x87,
	0x1f, 0xa1, 0x29, 0x17, 0x98, 0x62, 0xea, 0x12, 0xf3, 0xe6, 0x00, 0x63, 0xed, 0x35, 0x7b, 0x4e,
	0xde, 0x79, 0xad, 0x41, 0xdd, 0x0b, 0x96, 0x5b, 0xe3, 0x8f, 0x02, 0x9d, 0xaa, 0x2d, 0xe2, 0x10,
	0x34, 0x2e, 0xa8, 0x88, 0xb8, 0xdc, 0x7d, 0x7b, 0xf0, 0xee, 0x25, 0xbb, 0x37, 0xe7, 0xd2, 0x42,
	0x52, 0xab, 0xf1, 0x15, 0xb4, 0xa4, 0x82, 0x4d, 0x78, 0xb5, 0x70, 0x6e, 0x9d, 0xe9, 0x67, 0x47,
	0xaf, 0xe1, 0x6b, 0x68, 0x59, 0x0b, 0x77, 0x6c, 0x3b, 0xee, 0xcd, 0xd0, 0x72, 0xed, 0x91, 0xae,
	0x60, 0x0b, 0x1a, 0xd7, 0xd6, 0xe8, 0xce, 0x99, 0x3a, 0x43, 0x5b, 0x3f, 0xca, 0x1e, 0xdd, 0xe9,
	0xad, 0xed, 0xe8, 0x6a, 0x6c, 0x90, 0xd7, 0x3b, 0xfb, 0xcb, 0xec, 0x86, 0xd8, 0x23, 0xbd, 0x6e,
	0xfc, 0x52, 0x00, 0x0f, 0x43, 0x82, 0xe7, 0x00, 0xe9, 0x22, 0x3d, 0xb6, 0xec, 0x2a, 0x3d, 0xb5,
	0xdf, 0x20, 0xb9, 0x0a, 0x7e, 0x00, 0xed, 0x81, 0xfa, 0x8f, 0x6c, 0xd9, 0x3d, 0xea, 0xa9, 0xfd,
	0xe6, 0xe0, 0xfc, 0x99, 0xe0, 0x79, 0xcc, 0x0e, 0xc3, 0x20, 0x24, 0xa9, 0x1a, 0xaf, 0x76, 0xe3,
	0x50, 0xff, 0x1d, 0xd8, 0xd2, 0x14, 0x7e, 0x2b, 0xd0, 0xa9, 0xca, 0x1d, 0x1a, 0x70, 0xb2, 0xcb,
	0xdd, 0xbe, 0xdd, 0x42, 0x0d, 0x2f, 0x4b, 0x0d, 0xf7, 0x9e, 0x4d, 0xf4, 0xff, 0x6c, 0xf9, 0x12,
	0xda, 0xc5, 0x41, 0xa0, 0x0e, 0xea, 0x8a, 0x6d, 0x65, 0x18, 0x1a, 0x24, 0xbe, 0x62, 0x07, 0x8e,
	0x59, 0xfc, 0x91, 0xfc, 0x5b, 0x34, 0x48, 0xf2, 0x60, 0x5c, 0x81, 0x5e, 0xee, 0xe8, 0xc5, 0xde,
	0x7e, 0x71, 0xa5, 0x69, 0x74, 0x10, 0xea, 0x2b, 0xb6, 0xe5, 0xe9, 0x74, 0xe4, 0xdd, 0xd3, 0xe4,
	0x0b, 0xec, 0xfd, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x12, 0xfc, 0xef, 0x26, 0x05, 0x00,
	0x00,
}
