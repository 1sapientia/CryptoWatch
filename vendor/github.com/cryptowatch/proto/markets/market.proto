syntax = "proto3";

package ProtobufMarkets;

message Market {
  // DEPRECATED
  string exchange = 1;
  string currencyPair = 2;

  // Prefer integer ids to string slugs (far fewer bytes)
  uint64 exchangeId = 3;
  uint64 currencyPairId = 4;

  // New IDs from SQL; TODO remove 1,2,3,4 when migrationt o 5,6 is complete
  uint64 marketId = 5;
}

message Order {
  float price = 1;
  float amount = 2;
}

message Trade {
  int64 id = 1;
  int64 timestamp = 2;
  int64 timestampMillis = 5;
  float price = 3;
  float amount = 4;

  double priceDouble = 6;
  double amountDouble = 7;
}

message MarketUpdateMessage {
  reserved 8;

  Market market = 9;

  oneof Update {
    TickerUpdate tickerUpdate = 1;
    OrderBookUpdate orderBookUpdate = 2;
    OrderBookDeltaUpdate orderBookDeltaUpdate = 3;
    TradesUpdate tradesUpdate = 4;
    IntervalsUpdate intervalsUpdate = 5;
    SummaryUpdate summaryUpdate = 6;
    SparklineUpdate sparklineUpdate = 7;
    SpreadHistoryUpdate spreadHistoryUpdate = 10;
  }
}

message TickerUpdate{
  Market market = 1;
  float price = 2;
}

message OrderBookUpdate {
  float aggregationModulus = 3;

  repeated Order bids = 1;
  repeated Order asks = 2;
}

message OrderBookDeltaUpdate {
  float aggregationModulus = 3;

  message OrderDeltas {
    repeated Order set = 1;
    repeated Order delta = 2;
    repeated float remove = 3 [packed = false];
  }

  OrderDeltas bids = 1;
  OrderDeltas asks = 2;
}

message TradesUpdate {
  repeated Trade trades = 1;
}

message Interval {
  message OHLC {
    float open = 1;
    float high = 2;
    float low = 3;
    float close = 4;
  }

  int64 closetime = 1;
  int32 period = 4;

  OHLC ohlc = 2;

  float volumeBase = 3;
  float volumeQuote = 5;
}

message IntervalsUpdate {
  repeated Interval intervals = 1;
}

message SummaryUpdate {
  reserved 1;
  float last = 2;
  float high = 3;
  float low = 4;
  float volumeBase = 5;
  float volumeQuote = 9;
  float changeAbsolute = 6;
  float changePercent = 7;
  int32 numTrades = 8;
}

message SparklineUpdate {
  reserved 1;
  int64 time = 2;
  float price = 3;
}

message SpreadHistoryUpdate {
  message SpreadHistoryPoint {
    int64 timestamp = 1;
    float price = 2;
    float amount = 3;
  }

  repeated SpreadHistoryPoint asks = 1;
  repeated SpreadHistoryPoint bids = 2;
}
